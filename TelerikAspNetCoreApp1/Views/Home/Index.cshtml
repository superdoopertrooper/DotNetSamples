@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
	ViewData["Title"] = "Advanced Search demo";
}

@section Styles {
	<link rel="stylesheet" href="https://cdn.korzh.com/eq/7.3.3/eq.core.min.css">
	<link rel="stylesheet" href="https://cdn.korzh.com/eq/7.3.3/eq.view.min.css">

	<!-- AgGrid script -->
	<script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.noStyle.js"></script>

	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-grid.css">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-theme-alpine.css">

	<style>
		.eqjs-menu-levelDiv {
			border: 1px solid silver;
			border-radius: 0 0 4px 4px;
			padding: 6px 0;
			box-shadow: 4px 8px 15px 0px rgba(0,0,0,.16);
		}

		.eqjs-menu-itemDiv {
			min-width: 158px;
			font-size: 0.9rem;
		}

			.eqjs-menu-itemDiv:hover {
				background-color: #ecf3f5 !important;
				color: #1776b1;
			}

		#eqv-content {
			display: flex;
			flex-direction: column;
		}

		.eqv-header-panel {
			flex: 1 1 auto;
		}

		.eqv-bottom-panel {
			margin-top: 10px;
			flex: 1 1 auto;
			display: flex;
			flex-direction: row;
		}

		.eqv-sql-panel {
			flex: 0 0 auto;
			margin-right: 10px !important;
		}

		.eqv-result-panel {
			flex: 1 1 auto;
		}

	</style>
}

<div class="container">
	<div class="eqjs-process-bar" id="ProcessBar" style="display: none;"></div>
	<div id="eqv-content">
		<div class="eqv-header-panel">
			<div class="eqv-entities-block">
				<hr class="eqv-entities-hr eqv-hr">
				<div class="eqv-entities-title">Entities</div>
				<div class="eqv-entities-panel-container">
					<div id="EntitiesPanel"></div>
				</div>
		</div>
			<div class="eqv-central-block">
				<div class="eqv-columns-block">
					<hr class="eqv-columns-hr eqv-hr">
					<div class="eqv-columns-title">Columns</div>
					<div class="eqv-columns-panel-container">
						<div id="ColumnsPanel"></div>
					</div>
				</div>
				<div class="eqv-conditions-block">

					<hr class="eqv-conditions-hr eqv-hr">
					<div class="eqv-conditions-title">Conditions</div>
					<div class="eqv-conditions-panel-container">
						<div id="QueryPanel"></div>
					</div>
				</div>

<
			</div>
			<div class="eqv-menu-block">
				<hr class="eqv-menu-hr eqv-hr">
				<div class="eqv-menu-title">Query Menu</div>
				<div class="eqv-menu-content">
					<div id="QueryNameLabel" class="eqjs-query-name"><div class="eqjs-query-name-text eqjs-query-name-theme">[New query]</div><span class="eqjs-query-name-asterisk" style="visibility: hidden;">*</span><span class="eqjs-query-name-tooltip eqjs-query-name-theme">[New query]</span></div>

					<a id="ClearQueryButton" class="eqv-button">Clear</a>

					<div class="eqv-dropdown-container">
						<a id="LoadQueryButton" class="eqv-button eqv-drop-button">Load <span style="float: right">▼</span></a>
						<div class="eqv-dropdown-content">
						</div>
					</div>

					<div class="eqv-dropdown-container">
						<a id="StorageDropButton" class="eqv-button eqv-drop-button">Storage <span style="float: right">▼</span></a>
						<div class="eqv-dropdown-content">
							<a id="NewQueryButton" href="#">New query</a>
							<a id="SaveQueryButton" href="#">Save query</a>
							<a id="CopyQueryButton" href="#">Save query as...</a>
							<a id="RemoveQueryButton" href="#">Remove query</a>
						</div>
					</div>

					<a id="FetchDataButton" class="eqv-button eqv-button-fetch">Fetch Data</a>

					<hr>

					<div id="ChangeLocale"></div>

					<div><p></p></div>

					<div class="eqv-dropdown-container"><a class="eqv-button eqv-drop-button">Code samples <span style="float: right">▼</span></a><div class="eqv-dropdown-content"><a>Show aggregation/grouping dialog</a><a>Currency columns to aggregates</a><a>Manage sub and grand totals</a></div></div><select class="eqv-select"><option value="default">EasyGrid</option><option value="ag-grid">AgGrid</option><option value="kendo-grid">Kendo</option></select>
				</div>
			</div>
		</div>
		</div>
		<div class="eqv-bottom-panel">
			<div class="eqv-sql-panel">
				<div class="eqv-sql-title">SQL</div>
				<div id="StatementPanel"></div>
			</div>
			<div class="eqv-result-panel">
				<div class="eqv-result-title">Result</div>
				<div id="ResultPanel"></div>
			</div>
		</div>

</div>

@section Scripts {
	<!-- ChartJS script -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js" type="text/javascript"></script>

	<!-- Kendo script -->
	<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>

	<!--
		The following Kendo scripts are used for demonstration purposes only
		(to show how you can use a third-party grid with EasyQuery).
		They are not necessary in general cases.
	-->
	<script src="https://kendo.cdn.telerik.com/2021.1.119/js/kendo.all.min.js"></script>
	<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2021.1.119/styles/kendo.default-v2.min.css" />

	<!-- EasyQuery scripts -->
	<script src="https://cdn.korzh.com/eq/7.3.3/eq.enterprise.min.js"></script>

	<!-- Examples of custom GRID integration -->
	<script src="~/js/kendo-grid-widget.js"></script>
	<script src="~/js/ag-grid-widget.js"></script>

	<!-- Useful code samples -->
	<script src="~/js/samples/convert-columns-to-aggr.js"></script>
	<script src="~/js/samples/manage-subtotals.js"></script>

	<!-- Sample selectors logic -->
	<script src="~/js/sample-selectors.js"></script>

	<!-- EasyQuery Advanced Search view initialization -->
	<script>

		window.addEventListener('load', function () {

			//Options for AdvancedSearchViewJQuery
			var viewOptions = {

				//Load model on start
				loadModelOnStart: true,

				//Load query on start
				loadQueryOnStart: false,

				enableExport: true,
				serverExporters: ['pdf', 'excel', 'csv'],

				//locale: 'en-US',
				localeSettings: {
					shortDateFormat: 'yyyy-MM-dd',
				},

				//Handlers
				handlers: {
					afterFetchData: function(context) {
						//console.log("After Fetch");
					},
					//Error handler
					onError: function (_, error) {
						console.error(error.sourceError);
					},
					onListRequest: function (params, onResult) {
						console.log('Inside list request handler');
						var processed = true;
						const listName = params.listName;
						if (listName.startsWith("Lookup")) {
							console.log('Looking for list: ', listName);
							const type = listName.split(' ')[1];
							const list = [];
							getLookupList(type, onResult);
						} else {
							processed = false;
						}
						return processed;
					},
				},
				result: {
					//Show EasyChart
					showChart: true,
					paging: {
						pageSize: 30
					}
				}
			};

			configureOptionsForSelectedGrid(viewOptions);

			var view = new easyquery.ui.AdvancedSearchView();
			var context = view.getContext();
			context.useEnterprise(function () {
				view.init(viewOptions);
			});

			document['AdvancedSearchView'] = view;
		});

		function getLookupList(type, onSuccess) {
			$.ajax({
				dataType: 'json',
				url: '/api/values/list1',
				success: function (data) {
					onSuccess(data);
				},

				error: function (jqXHR, textStatus, errorThrown) {
					alert('ERROR: ' + textStatus + ' ' + errorThrown);
				}
			});
		}
	</script>
}